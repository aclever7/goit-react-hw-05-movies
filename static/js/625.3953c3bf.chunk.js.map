{"version":3,"file":"static/js/625.3953c3bf.chunk.js","mappings":"0TAIaA,EAAW,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACzB,OACE,SAAC,KAAD,CACEC,KAAM,CACJC,OAAQ,GACRC,OAAQ,GAEVC,WAAYJ,EACZK,WAAY,SAAAC,GAAI,OACd,SAAC,UAAD,WACE,SAAC,eAAD,CACEC,OACM,OAAJD,QAAI,IAAJA,GAAAA,EAAME,cACJ,SAAC,IAAD,CACEC,IAAG,0CAAqCH,EAAKE,iBAG/C,SAACE,EAAA,EAAD,IAGJC,OAAO,cAAGC,KAAK,qBAAR,SAA8BN,EAAKO,OAC1CC,YAAaR,EAAKS,aAZNT,EAAKU,GADP,GAmBrB,ECxBYC,EAAY,WACvB,OAAkCC,EAAAA,EAAAA,YAAlC,eAAOlB,EAAP,KAAkBmB,EAAlB,KACA,GAA8BD,EAAAA,EAAAA,YAA9B,eAAOE,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,sGAEIH,GAAW,GAFf,SAG2BI,EAAAA,GAAsBH,GAHjD,gBAGYhB,EAHZ,EAGYA,KACRa,EAAab,GACbe,GAAW,GALf,kDAOIA,GAAW,GACXF,EAAa,MARjB,2DADc,uBAAC,WAAD,wBAYdO,EACD,GAAE,CAACJ,KAGF,UAACK,EAAA,EAAD,WACGP,IACC,SAACQ,EAAA,EAAD,CACEC,MAAO,CAAEC,SAAU,GAAIC,QAAS,OAAQC,eAAgB,UACxDC,MAAI,IAGLjC,GACD,SAACD,EAAD,CAAUC,UAAWA,KAEpBoB,IAAW,gFAInB,C,4MCxCKc,EAAM,mCAEZC,IAAAA,SAAAA,QAAyB,8BAElB,IAAMC,EAAiB,mCAAG,WAAMC,GAAN,gFAC1BA,IAAMA,EAAO,GADa,SAEbF,IAAAA,IAAA,qCAAwCD,EAAxC,iBAAoDG,IAFvC,cAEzBC,EAFyB,OAGzBC,EAASD,EAAIE,KAHY,kBAIxBD,GAJwB,2CAAH,sDAOjBE,EAAY,mCAAG,WAAMC,GAAN,yFACRP,IAAAA,IAAA,kBACLO,EADK,oBACeR,EADf,+BADQ,cACpBI,EADoB,OAIpBK,EAAQL,EAAIE,KAJQ,kBAKnBG,GALmB,2CAAH,sDAQZC,EAAiB,mCAAG,WAAMF,GAAN,yFACbP,IAAAA,IAAA,kBAAqBO,EAArB,4BAAiDR,IADpC,cACzBI,EADyB,OAEzBhC,EAAOgC,EAAIE,KAFc,kBAGxBlC,GAHwB,2CAAH,sDAMjBuC,EAAoB,mCAAG,WAAMH,GAAN,yFAChBP,IAAAA,IAAA,kBAAqBO,EAArB,4BAAiDR,IADjC,cAC5BI,EAD4B,OAE5BQ,EAAUR,EAAIE,KAFc,kBAG3BM,GAH2B,2CAAH,sDAMpBC,EAAe,mCAAG,WAAOC,EAAOX,GAAd,yFACXF,IAAAA,IAAA,iCACUD,EADV,kBACuBc,EADvB,4CACgEX,IAFrD,cACvBC,EADuB,OAIvBC,EAASD,EAAIE,KAJU,kBAKtBD,GALsB,2CAAH,uD","sources":["components/MovieCast/CastList/CastList.jsx","components/MovieCast/MovieCast.jsx","service/Api.js"],"sourcesContent":["import { Avatar, List } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\n\nexport const CastList = ({ castMovie }) => {\n  return (\n    <List\n      grid={{\n        gutter: 16,\n        column: 4,\n      }}\n      dataSource={castMovie}\n      renderItem={cast => (\n        <List.Item key={cast.id}>\n          <List.Item.Meta\n            avatar={\n              cast?.profile_path ? (\n                <Avatar\n                  src={`https://image.tmdb.org/t/p/w500/${cast.profile_path}`}\n                />\n              ) : (\n                <UserOutlined />\n              )\n            }\n            title={<a href=\"https://ant.design\">{cast.name}</a>}\n            description={cast.character}\n          />\n        </List.Item>\n      )}\n    />\n  );\n};\n\nCastList.propTypes = {\n  castMovie: PropTypes.array.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../../service/Api';\nimport { Container } from 'components/Container/Container';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { CastList } from './CastList/CastList';\n\nexport const MovieCast = () => {\n  const [castMovie, setCastMovie] = useState();\n  const [loading, setLoading] = useState();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchCast() {\n      try {\n        setLoading(true);\n        const { cast } = await API.getCastOfTheMovie(movieId);\n        setCastMovie(cast);\n        setLoading(false);\n      } catch {\n        setLoading(false);\n        setCastMovie(null);\n      }\n    }\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <Container>\n      {loading && (\n        <LoadingOutlined\n          style={{ fontSize: 36, display: 'flex', justifyContent: 'center' }}\n          spin\n        />\n      )}\n      {!!castMovie ? (\n        <CastList castMovie={castMovie} />\n      ) : (\n        !loading && <p>There is no information about the cast of the film</p>\n      )}\n    </Container>\n  );\n};\n","import axios from 'axios';\n\nconst KEY = '907d92356ea975d8c4e764d27999a432';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\n\nexport const getTrandingMovies = async page => {\n  if (!page) page = 1;\n  const res = await axios.get(`3/trending/all/day?api_key=${KEY}&page=${page}`);\n  const movies = res.data;\n  return movies;\n};\n\nexport const getMovieById = async movie_id => {\n  const res = await axios.get(\n    `3/movie/${movie_id}?api_key=${KEY}&append_to_response=videos`\n  );\n  const movie = res.data;\n  return movie;\n};\n\nexport const getCastOfTheMovie = async movie_id => {\n  const res = await axios.get(`3/movie/${movie_id}/credits?api_key=${KEY}`);\n  const cast = res.data;\n  return cast;\n};\n\nexport const getReviewsOfTheMovie = async movie_id => {\n  const res = await axios.get(`3/movie/${movie_id}/reviews?api_key=${KEY}`);\n  const reviews = res.data;\n  return reviews;\n};\n\nexport const getMovieByQuery = async (query, page) => {\n  const res = await axios.get(\n    `3/search/movie?api_key=${KEY}&query=${query}&page=1&include_adult=false&page=${page}`\n  );\n  const movies = res.data;\n  return movies;\n};\n"],"names":["CastList","castMovie","grid","gutter","column","dataSource","renderItem","cast","avatar","profile_path","src","UserOutlined","title","href","name","description","character","id","MovieCast","useState","setCastMovie","loading","setLoading","movieId","useParams","useEffect","API","fetchCast","Container","LoadingOutlined","style","fontSize","display","justifyContent","spin","KEY","axios","getTrandingMovies","page","res","movies","data","getMovieById","movie_id","movie","getCastOfTheMovie","getReviewsOfTheMovie","reviews","getMovieByQuery","query"],"sourceRoot":""}