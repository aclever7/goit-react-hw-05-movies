{"version":3,"file":"static/js/578.720ec533.chunk.js","mappings":"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","sources":["components/MoviesList/MovieItem/MovieItem.styled.js","components/MoviesList/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/Home.js","components/Movie/Movie.styled.js","components/Movie/Movie.jsx","pages/MoviePage.js","pages/SearchMovie.js","service/Api.js"],"sourcesContent":["import { Card } from 'antd';\nimport styled from 'styled-components';\n\nexport const Item = styled.li`\n  @media screen and (max-width: 767px) {\n    &:not(:last-child) {\n      margin-bottom: 20px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: flow;\n    flex-basis: calc(100% / 3 - 32px);\n    width: 213.3px;\n    margin-left: 32px;\n    margin-top: 32px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    flex-basis: calc(100% / 4 - 16px);\n    width: 228px;\n    margin-left: 16px;\n  }\n`;\n\nexport const MovieCard = styled(Card)`\n  line-height: 1.2;\n  max-width: 228px;\n\n  .ant-card-body {\n    padding: 10px;\n    overflow: hidden;\n    flex-grow: 1;\n  }\n\n  .ant-card-meta-description {\n    white-space: nowrap;\n    overflow-x: hidden;\n  }\n`;\nexport const Img = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  flex-grow: 1;\n  @media screen and (min-width: 768px) {\n    height: 320px;\n  }\n  @media screen and (min-width: 1024px) {\n    height: 340px;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Card } from 'antd';\nimport PropTypes from 'prop-types';\nimport { Item, MovieCard, Img } from './MovieItem.styled';\n\nconst { Meta } = Card;\n\nexport const MovieItem = ({ id, title, img }) => {\n  let location = useLocation();\n\n  const poster = !!img\n    ? `https://image.tmdb.org/t/p/w500/${img}`\n    : 'https://www.remosoftware.com/info/wp-content/plugins/accelerated-mobile-pages/images/SD-default-image.png';\n\n  return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <MovieCard hoverable cover={<Img alt={title} src={poster} />}>\n          <Meta title={title} description={title} />\n        </MovieCard>\n      </Link>\n    </Item>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  img: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 0;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-wrap: wrap;\n    margin-left: -32px;\n    margin-top: -32px;\n  }\n  @media screen and (min-width: 1024px) {\n    margin-left: -16px;\n  }\n`;\n","import { MovieItem } from './MovieItem/MovieItem';\nimport { List } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ list }) => {\n  return (\n    <>\n      {!!list && (\n        <List>\n          {list.map(({ id, original_title, original_name, poster_path }) => {\n            const title = original_title || original_name;\n            return (\n              <MovieItem key={id} id={id} title={title} img={poster_path} />\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string,\n      original_name: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const SectionStyled = styled.section`\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n","import { SectionStyled } from './Section.styled';\n\nexport const Section = ({ children }) => {\n  return <SectionStyled>{children}</SectionStyled>;\n};\n","import { Container } from 'components/Container/Container';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Section } from 'components/Section/Section';\nimport * as API from '../service/Api';\nimport { Empty, Pagination } from 'antd';\n\nexport const Home = () => {\n  const [trandingList, setTrandingList] = useState();\n  const [error, setError] = useState();\n  const [totalPage, setTotalPage] = useState();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const page = searchParams.get('page');\n\n  console.log(trandingList);\n\n  useEffect(() => {\n    !page && setSearchParams({ page: 1 });\n  }, [setSearchParams, page]);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const data = await API.getTrandingMovies(page);\n\n        setTotalPage(data.total_pages);\n        setTrandingList(data.results);\n      } catch (error) {\n        setError('An error has occured');\n      }\n    }\n    fetchData();\n  }, [page]);\n\n  const onChange = p => {\n    setSearchParams({ page: p });\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <Section>\n      <Container>\n        {!!trandingList && <MoviesList list={trandingList}></MoviesList>}\n        {!!error && <Empty description={error} />}\n        {!!trandingList && (\n          <Pagination\n            defaultCurrent={page}\n            total={totalPage}\n            onChange={onChange}\n            style={{ display: 'flex', justifyContent: 'center' }}\n            hideOnSinglePage={true}\n            showSizeChanger={false}\n          />\n        )}\n      </Container>\n    </Section>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h1``;\n\nexport const MovieImg = styled.div`\n  width: 30%;\n  margin-right: 30px;\n`;\n\nexport const Img = styled.img`\n  display: inline-block;\n  border: 1px solid #716f6f;\n  padding: 5px;\n  width: 100%;\n`;\n\nexport const Aside = styled.div`\ndisplay; block;\nwidth: 100%;\nfont-size: 18px;\n\n& .ant-descriptions-item {\n    padding-bottom: 8px;\n};\n\n& .ant-descriptions-item-content {\n    font-size: 18px;\n};\n\n& .ant-descriptions-item-label {\n    font-size: 18px;\n    font-weight: 700;\n}\n`;\n\nexport const About = styled.div`\n  font-size: 18px;\n`;\n","import { Container } from 'components/Container/Container';\nimport { Content, MovieImg, Img, Aside, Title, About } from './Movie.styled';\nimport { Descriptions } from 'antd';\nimport PropTypes from 'prop-types';\n\nexport const Movie = ({ movie }) => {\n  const poster = !!movie.poster_path\n    ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n    : 'https://www.remosoftware.com/info/wp-content/plugins/accelerated-mobile-pages/images/SD-default-image.png';\n\n  return (\n    <Container>\n      <Title>{movie?.original_title}</Title>\n      <Content>\n        <MovieImg>\n          <Img src={poster} alt={movie?.original_title}></Img>\n        </MovieImg>\n        <Aside>\n          <Descriptions column={1}>\n            <Descriptions.Item label=\"Rating\">\n              {movie?.vote_average} ({movie?.vote_count})\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Release date\">\n              {movie.release_date ? movie.release_date.slice(0, 4) : ''}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Country\">\n              {movie?.production_countries[0]?.name}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Production companies\">\n              {movie?.production_companies.map(c => c.name).join(', ')}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Genres\">\n              {movie?.genres.map(g => g.name).join(', ')}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Genres\">\n              {movie?.status}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Genres\">\n              {movie?.runtime} min.\n            </Descriptions.Item>\n          </Descriptions>\n        </Aside>\n      </Content>\n      <About>\n        <h2>About:</h2>\n        <p>{movie.overview}</p>\n      </About>\n    </Container>\n  );\n};\n\nMovie.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","import { Movie } from 'components/Movie/Movie';\nimport { useEffect, useState, Suspense } from 'react';\nimport { useParams, Outlet, useNavigate, useLocation } from 'react-router-dom';\nimport { Section } from 'components/Section/Section';\nimport * as API from '../service/Api';\nimport { Container } from 'components/Container/Container';\nimport { Empty, Button, Tabs } from 'antd';\nimport { ArrowLeftOutlined, LoadingOutlined } from '@ant-design/icons';\n\nexport const MoviePage = () => {\n  const [movie, setMovie] = useState();\n  const [error, setError] = useState();\n\n  const { movieId } = useParams();\n\n  let { state } = useLocation();\n\n  const { TabPane } = Tabs;\n\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchMovie() {\n      try {\n        const movie = await API.getMovieById(movieId);\n        setMovie(movie);\n      } catch {\n        setError('No info about this movie');\n      }\n    }\n    fetchMovie();\n  }, [movieId]);\n\n  const onChange = key => {\n    if (key === '1') {\n      navigate(`/movies/${movieId}/cast`, { state: { from: state.from } });\n    } else if (key === '2') {\n      navigate(`/movies/${movieId}/reviews`, { state: { from: state.from } });\n    }\n  };\n\n  const goBack = () => {\n    state?.from\n      ? navigate(state.from.pathname + state.from.search)\n      : navigate('/');\n  };\n\n  return (\n    <Section>\n      <Container>\n        <Button type=\"text \" icon={<ArrowLeftOutlined />} onClick={goBack}>\n          Go back\n        </Button>\n      </Container>\n\n      {!!movie && (\n        <>\n          <Movie movie={movie} />\n          <Container>\n            <Tabs activeKey=\"3\" onChange={onChange}>\n              <TabPane tab=\"Cast\" key=\"1\"></TabPane>\n              <TabPane tab=\"Reviews\" key=\"2\"></TabPane>\n            </Tabs>\n          </Container>\n          <Suspense\n            fallback={\n              <LoadingOutlined\n                style={{\n                  fontSize: 36,\n                  display: 'flex',\n                  justifyContent: 'center',\n                }}\n                spin\n              />\n            }\n          >\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n      {!movie && <Empty description={error} />}\n    </Section>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport * as API from '../service/Api';\nimport { Section } from 'components/Section/Section';\nimport { Container } from 'components/Container/Container';\nimport { Empty, Pagination, Input } from 'antd';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst { Search } = Input;\n\nexport const SearchMovie = () => {\n  const [isloading, setIsLoading] = useState(false);\n  const [moviesByQuery, setMoviesByQuery] = useState();\n  const [totalPage, setTotalPage] = useState();\n  const [error, setError] = useState('TYPE MOVIE TITLE');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movie = searchParams.get('movie');\n  const page = searchParams.get('page');\n\n  useEffect(() => {\n    !page && setSearchParams({ page: 1 });\n  }, [setSearchParams, page]);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setError(false);\n        setIsLoading(true);\n        const movies = await API.getMovieByQuery(movie, page);\n\n        setTotalPage(movies.total_pages);\n\n        setMoviesByQuery(movies.results);\n\n        !movies.results.length &&\n          setError('No movies were found with current query');\n        setIsLoading(false);\n      } catch (error) {\n        setError('No movies were found with current query');\n      }\n    }\n\n    if (!!movie) {\n      fetchData();\n    }\n  }, [movie, page]);\n\n  const onSearch = value => {\n    setSearchParams({ movie: value, page: page });\n  };\n\n  const onChange = p => {\n    setSearchParams({ movie: movie, page: p });\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <Container>\n      <Section>\n        <Search\n          placeholder=\"TYPE MOVIE TITLE\"\n          onSearch={onSearch}\n          enterButton\n          loading={isloading}\n          defaultValue={movie}\n        />\n      </Section>\n      <Section>\n        {!!moviesByQuery && <MoviesList list={moviesByQuery} />}\n        {(!!error || !moviesByQuery) && <Empty description={error} />}\n        {!!moviesByQuery && !!moviesByQuery.length && (\n          <Pagination\n            defaultCurrent={page}\n            total={totalPage}\n            onChange={onChange}\n            style={{ display: 'flex', justifyContent: 'center' }}\n            hideOnSinglePage={true}\n            showSizeChanger={false}\n          />\n        )}\n      </Section>\n    </Container>\n  );\n};\n","import axios from 'axios';\n\nconst KEY = '907d92356ea975d8c4e764d27999a432';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\n\nexport const getTrandingMovies = async page => {\n  if (!page) page = 1;\n  const res = await axios.get(`3/trending/all/day?api_key=${KEY}&page=${page}`);\n  const movies = res.data;\n  return movies;\n};\n\nexport const getMovieById = async movie_id => {\n  const res = await axios.get(\n    `3/movie/${movie_id}?api_key=${KEY}&append_to_response=videos`\n  );\n  const movie = res.data;\n  return movie;\n};\n\nexport const getCastOfTheMovie = async movie_id => {\n  const res = await axios.get(`3/movie/${movie_id}/credits?api_key=${KEY}`);\n  const cast = res.data;\n  return cast;\n};\n\nexport const getReviewsOfTheMovie = async movie_id => {\n  const res = await axios.get(`3/movie/${movie_id}/reviews?api_key=${KEY}`);\n  const reviews = res.data;\n  return reviews;\n};\n\nexport const getMovieByQuery = async (query, page) => {\n  const res = await axios.get(\n    `3/search/movie?api_key=${KEY}&query=${query}&page=1&include_adult=false&page=${page}`\n  );\n  const movies = res.data;\n  return movies;\n};\n"],"names":["Item","styled","MovieCard","Card","Img","Meta","MovieItem","id","title","img","location","useLocation","poster","to","state","from","hoverable","cover","alt","src","description","List","MoviesList","list","map","original_title","original_name","poster_path","SectionStyled","Section","children","Home","useState","trandingList","setTrandingList","error","setError","totalPage","setTotalPage","useSearchParams","searchParams","setSearchParams","page","get","console","log","useEffect","API","data","total_pages","results","fetchData","Container","defaultCurrent","total","onChange","p","window","scrollTo","style","display","justifyContent","hideOnSinglePage","showSizeChanger","Content","Title","MovieImg","Aside","About","Movie","movie","column","label","vote_average","vote_count","release_date","slice","production_countries","name","production_companies","c","join","genres","g","status","runtime","overview","MoviePage","setMovie","movieId","useParams","TabPane","Tabs","navigate","useNavigate","fetchMovie","type","icon","ArrowLeftOutlined","onClick","pathname","search","activeKey","key","tab","Suspense","fallback","LoadingOutlined","fontSize","spin","Search","Input","SearchMovie","isloading","setIsLoading","moviesByQuery","setMoviesByQuery","movies","length","placeholder","onSearch","value","enterButton","loading","defaultValue","KEY","axios","getTrandingMovies","res","getMovieById","movie_id","getCastOfTheMovie","cast","getReviewsOfTheMovie","reviews","getMovieByQuery","query"],"sourceRoot":""}